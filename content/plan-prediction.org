#+TITLE: Plan prediction
#+DATE: 2017-12-20
#+CATEGORY: tools
#+Tags: statistics, machine-learning, AI, raster, data
#+PROPERTY: status draft

For the raster project a main selling point will be the automatic prediction
of future scheduling.
There are two major schools of thoughts to go with that I know of.
Constraint satisfaction solving and data driven appraoches (eg use statistics).

First of all the most straight forward approach is to use something like
optaplanner[fn::link?]. 
In this approach constraints are laid upon the problem, such as 2 cooks
need to at least work on saterday, but preferably 3.
This single constraint has two different part, the hard minimum, and the 'soft'
preference.
With these kind of rules in place, the opta planner can use heuristics to figure
out who to plan when.
You could add as many constraints as you want, such as have less preference for
when employees asked free or let students not work during the day.

This is a very precise approach and almost surely will work,
as other systems have demostrated already[fn:: youtube link].
However the issue with this approach is the actual specification of rules.
This is quite difficult to do, so for a fact I can't push this onto the company
owners.
What I could do is create some kindoff helping GUI around it.
Or simply use generic predefined rules and if owners want something more
sophisticated they should contact me.
On top of that the opta planner system I know of is written in Java,
which is kind off problematic since I now need to develop some kindoff
micro-service architeture around it.

So I'm actually more inclined to go with the second approach as I can do a much
more quick fix kindoff job without all these uncertainties.
The basic idea is that I use the already entered data by the owner to create a
statistical model of how he likes to make his plannings.
Then we use this model to make future predictions.
This requires zero configuration by the owner, and also doesn't have the
langauge problem as it's just some calculations.
What I imagine is just adding a predict button to the current inplan screen
that uses the statistical model to magically create a roster.

Now the method I thought of is so simple it probably isn't even a technique
listed in my dataming course[fn:: link], but here is the gist of it:
We count per day how many job types are planned in on average over /n/ weeks.
Then we plan in that amount of job types.
If someone has asked free we remove him from the potential pool of workers.
If there are not enough workers for a job type we just throw a warning for that
date and let the owner figure it out.

The beauty of this technique is that it is simple,
but it takes a lot of work out of planning in people.
If this is well received there is tons of room for extension.
For example naive baysian networks can be used to take into account
'experience'.
If we add a reserveration datasource somehow prediction could become even more
accurate.
Whilst the basic interface remains the same, press the 'predict' button and
magickly you get a roster.
