#+Title: Webshop setup
#+Date: 2017-07-08 22:00
#+Category: tools
#+Tags: webshop, money
#+PROPERTY: subreddit entreperneur
#+PROPERTY: status draft

The money problem is becoming more critical as time passes.
An idea my girlfriend had to do entreperneurship was "buying and selling things".
I came with the suggestion to do this in a webshop fashion because we both don't
really like talking to people.
This later evolved into an import idea towards indonesia, where the webshop
would face indonesia, be translated into a bunch of langauges
(dutch, english, bahasa and chinese), just because we can.

As a programmer however you are faced with the choice, do you develop this on
your own or do you use an existing system.
Because I don't want to develop this thing for the comming months I decided
to just pickup the magento source and set that up.
Maybe we don't even sell much at all, but if we do I can always transition
to a home brewn system (I was thinking about making that in Rust, but alas I
gave up before starting because I remembered how long it took last time when I
home brew a webshop, and then I was using tried and tested techniques).

* Magento
The leading system of ecomerce, probably. 
Written in PHP, so we can expect that this system will eventually lose steam
as PHP is just [[https://eev.ee/blog/2012/04/09/php-a-fractal-of-bad-design/][horribly broken]].
If the shop does become something, I *will* make an alternative with as main
selling point not php and publish it under AGPL.
However my main requirement now is getting a minimum viable webshop
up and running, and grabbing an existing system from the web is the 
quickest way of doing that.
It has been tested in the field and it is therby of much better quality
than what I can cook up in two to three months.

** Instalation
It's quite complicated to setup a magento website, as we need to configure
at least four different systems that are deeply intertwined with each other.
A deployment diagram of the system can be seen in figure [[fig:dep:magento]].
Is all this stuff neccisarry? Yes, it is if you're doing magento.
There is a step by step guide to set this up into
ubuntu [[https://www.howtoforge.com/tutorial/how-to-install-magento-with-nginx-on-ubuntu/][here]], however it didn't work for me because I was using
gentoo to figure out how this all works before forking over money to 
a webhosting service.
Of course I ran into trouble, which is why I'm writing this post.

Nginx handles the browser requess, fpm-php is a system that 
offloads php into dedicaded processes which is more stable and faster.
The php process just loads the magento script, which in turn connects 
to the database to figure out what the user wants to see.

#+NAME: fig:dep:magento
#+BEGIN_SRC plantuml :cache yes :file ./images/2017/uml/dep:magento.svg :exports results
actor user
agent nginx

user -> nginx : requests web page

agent "fpm-php" as php

nginx --> php : Trough socket: What should I do?

php --> processcloud : Forks of a php process todo the real work

cloud "php processes" as processcloud{
    agent "php" as reader
}
artifact "magento script" as magento
reader -> magento : Reads
database mysql [
Orders
User state
Other variable data
]
magento -> mysql : What to show the user?
#+END_SRC

#+CAPTION: Magento IPC overview
#+LABEL: fig:dep:magento
#+RESULTS[b2da147fa7c80ed6b12f0e06bec7fee25d79b363]: fig:dep:magento
[[file:./images/2017/uml/dep:magento.svg]]

I had various issues,
The general way of dealing with this...

first of all fpm-php didn't create the websocket
on the location they said in the guide.
A unix socket is a file, which is used for IPC.
So the arrow going from nginx to fpm-php didn't exist on my system.
Gentoo appearantly uses a port for fpm-php by default, which I saw
in the config script of fpm-php: =/etc/php/fpm-php7.0/fpm.d/www.conf=.

+ Main script not found
+ Ownership of socket
+ /tmp filesystem..
