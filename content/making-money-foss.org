#+TITLE: Making money with foss
#+OPTIONS: toc:nil
#+DATE: 2017-05-22
#+CATEGORY: technique
#+Tags: free, money, software, programming

In this blog post I will discuss how to make money with open source software.
Why do you care?
Especially the free software variant is [[https://www.gnu.org/philosophy/free-sw.en.html][consumer friendly]].
(note that these consumers maybe businesses too),
however as a developer trying to make a living of writing this kind of software
maybe difficult.
Which is a big problem, we often end up having developers doing the work in
their free time.

This hits hard home as I myself would like to do this full time.
But lest I became [[https://www.reddit.com/r/financialindependence/][financially independent]], I couldn't.
So in here I will list the options I found trough researching the subject.
As both an overview to myself and to the interested reader.

* Google results
So I already had some ideas about how to do this,
but its interesting what Google says about the subject.

** First attempt
I searched for [[https://www.google.nl/search?q=making+money+with+foss&ie=utf-8&oe=utf-8&client=firefox-b&gfe_rd=cr&ei=50YjWYn_CdHU8geKob64BQ]["Making money with foss"]].

The first site that came up was [[http://www.infoworld.com/article/2612393/open-source-software/greed-is-good--9-open-source-secrets-to-making-money.html][info world]].
This site was full of warning flags,
click bait title,
advertise other articles mid article (instead of at the end),
using a pager.
After skimming the article it wasn't about making money of an open source project,
but potential reasons for open sourcing (part of) your code.
So it was aimed at mid to high level management.
A [[http://www.fosslc.org/drupal/node/131][second article]] linked to [[http://carlodaffara.conecta.it/?p=90&cpage=1#comment-50][another page]] with a better list, but I couldn't
find it.
The third [[http://www.cio.com/article/3178621/open-source-tools/how-to-make-money-from-open-source-software.html][article]] was just a summery of a video and wasn't very focused.

Okay so my search terms were bad. Time to be more specific.

** Second attempt
I searched for [[https://www.google.nl/search?q=making+money+with+foss&ie=utf-8&oe=utf-8&client=firefox-b&gfe_rd=cr&ei=50YjWYn_CdHU8geKob64BQ#q=foss+business+models]["foss business models"]], you know you did something right when
scholarly articles start being presented.

So there was an entire [[https://en.wikipedia.org/wiki/Business_models_for_open-source_software][Wikipedia page]] on the subject.
I guess more people are really interested in this.
So does this blog post die in the cradle?
I say no, I can still give my opinions on that page.
Another thing is that discussing this page on my blog will force me to closely
look at the possiblities.


Besides the fact that there is a (quite big) wiki on it only shows how much
people care about this subject.

* The Business models
So the core problem open source software faces is not having a monopoly on
distribution that copyright provides.
Therefore we can't sell it directly:
Anyone can start distrbuting the software without asking anything for it,
without running a loss becuase distrbution is
(pratically) free for software.
Giving up this monopoly is a neccisary requirement for opensource,
called the [[https://www.gnu.org/philosophy/free-sw.en.html][second and thirth freedoms]].

** Sell stuff besides software
One of the primary strategies is selling stuff besides the software.
Red Hat does this trough [[https://en.wikipedia.org/wiki/Red_Hat#Business_model][providing support contracts]] for example.
This can be extended by providing certificates of expertise
(which Red Hat also does).

Another strategy is selling of merchandise, such as fan [[https://store.wikimedia.org/collections/accessories][T-shirts or coffee cups]].
Which the wikimedia foundation does.
Selling merchandise is quite clever because its much more easy for someone to
buy "something", than just donating.
Besides its free advertisment for your project,
/and/ your users now have something to identify themselves with.

Finally a programmer can rent himself out to a project to add features or do
bug fixes.
These include [[https://www.bountysource.com/][bountysource]] or [[https://en.wikipedia.org/wiki/Kickstarter][kickstarter]], where bountysource is
usually fix an issue first and then get payd whereas kickstarter works on
promises.
So in esscense you're offering up your own time to work on a project.
In both cases there is of course the persistent issue that its [[https://softwareengineering.stackexchange.com/questions/648/how-to-respond-when-you-are-asked-for-an-estimate][hard to decide]]
how much time this will take.
With kickstarter however you can estimate it better because you're probably
starting your own bigger project, so the overhead of estimation is smaller.
But with bounty source each bounty requires its own estimate and if its about $100,
its hard to decide to even bother with that.
Another issue with bounty source is that you have to switch from project to
project often, which requires a lot of getting familiar with the code base
overhead.
So the model of bounty source is less then perfect to live off.
Although for existing developers of a project its a great motivation to work a
little more.
But don't expect strangers to 'join in', just because of the bounties
unless they're highly overvalued.
In fact you can see that few people 'live' off bounty source just by the
overview of bounty hunters. Only three people at the time of writing got over
$2000 in the last 90 days and only 9 over $1000.

In the strategy of renting yourself out is going to interested parties yourself
and offer to write software.
I've attempted this at times with for example [[https://github.com/jappeace/offertex][offertex]] and [[https://github.com/jappeace/schijt-je-rijk][schijt je rijk]].
The issue that always gets me is negotating about price.
Almost everytime I just spend working for a bad wage for a programmer.
I think its better to offer support contracts,
but drafting up contracts is troublesome too.
First of all its horribly boring, secondly you should probably let a lawyer
check it.
Thirdly you need to make sure it can make you money.
And considering you need about at least 1000 euros per month just to live,
you have a big gap to fill.
So say you offer a contract of 50 euros per month,
then you need about 20 companies to get minimum wage.
(Which is a lot of initial negotating to setup).

** Donations

*** Patreon

** Advertisierk\tricks
*** TODO Dual license
*** Proprietary extensions
*** Delayed open sourcing


* Literature overview
Because google came up with the scholarly articles suggestion I decided to dig
into that too.
These articles are what most people consider to be /science/.

* In conclusion
Anyway I've wanted to write down my personal ideas of making money
with free software.
So particularly GPL style licensed software,
but these arguments could also hold true for BSD, MIT or Apache, I guess.


My blog seems to be really focused on money,
but this is a reflection of what I'm worried about these days.
